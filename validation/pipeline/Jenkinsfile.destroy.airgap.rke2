@Library('jenkins-shared-libraries') _

pipeline {
    agent {
        label 'ec2-state'
    }
    options {
        timeout(time: 3, unit: 'HOURS')
        buildDiscarder(logRotator(numToKeepStr: '60'))
        disableConcurrentBuilds()
        ansiColor('xterm')
        timestamps()
    }
    environment {
        AWS_ACCESS_KEY_ID     = credentials('aws-access-key-id')
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')
        AWS_REGION            = 'us-east-2'
        QA_INFRA_WORK_PATH    = "${WORKSPACE}/qa-infra"
        S3_BUCKET_NAME        = 'jenkins-terraform-state-storage'
        S3_KEY_PREFIX         = 'jenkins-airgap-rke2/terraform.tfstate'
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
                script {
                    currentBuild.displayName = "#${BUILD_NUMBER} ${S3_KEY_PREFIX}"
                }
            }
        }
        stage('Download Config') {
            steps {
                sh 'chmod +x validation/pipeline/scripts/destroy_download_config.sh'
                sh './validation/pipeline/scripts/destroy_download_config.sh'
            }
        }
        stage('Destroy Infrastructure') {
            steps {
                sh 'chmod +x validation/pipeline/scripts/destroy_infra.sh'
                sh './validation/pipeline/scripts/destroy_infra.sh'
            }
        }
    }
    post {
        always {
            archiveArtifacts artifacts: '**/tfplan', allowEmptyArchive: true
            archiveArtifacts artifacts: '**/terraform.tfstate', allowEmptyArchive: true
            archiveArtifacts artifacts: '**/terraform.tfstate.backup', allowEmptyArchive: true
            cleanWs()
        }
        failure {
            script {
                if (env.BRANCH_NAME == 'main') {
                    slackSend color: 'danger', message: "Destroy Airgap RKE2 Pipeline Failed: ${env.JOB_NAME} #${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)"
                }
            }
        }
    }
}